import com.example.MethodExecutionCalculationAspect;
import org.aspectj.lang.ProceedingJoinPoint;
import org.aspectj.lang.annotation.Around;
import org.aspectj.lang.annotation.Aspect;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.stereotype.Component;

@Component
@Aspect
@ComponentScan({"com.example"})
public class AopConfig {


    @Autowired
    MethodExecutionCalculationAspect methodExecutionCalculationAspect;

    private Logger logger = LoggerFactory.getLogger(this.getClass());

    @Around("execution(* com.example.demousingaop.business..*(..))")
    public void callExecTime(ProceedingJoinPoint joinPoint) throws Throwable {
        this.methodExecutionCalculationAspect.around(joinPoint);
    }

}
